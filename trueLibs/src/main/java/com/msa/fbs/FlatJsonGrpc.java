//Generated by flatc compiler (version 1.11.0)
//If you make any local changes, they will be lost
//source: flatJson.fbs

package com.msa.fbs;

import static io.grpc.MethodDescriptor.generateFullMethodName;
import static io.grpc.stub.ClientCalls.asyncClientStreamingCall;
import static io.grpc.stub.ClientCalls.asyncServerStreamingCall;
import static io.grpc.stub.ClientCalls.asyncUnaryCall;
import static io.grpc.stub.ClientCalls.blockingServerStreamingCall;
import static io.grpc.stub.ClientCalls.blockingUnaryCall;
import static io.grpc.stub.ClientCalls.futureUnaryCall;
import static io.grpc.stub.ServerCalls.asyncClientStreamingCall;
import static io.grpc.stub.ServerCalls.asyncServerStreamingCall;
import static io.grpc.stub.ServerCalls.asyncUnaryCall;
import static io.grpc.stub.ServerCalls.asyncUnimplementedStreamingCall;
import static io.grpc.stub.ServerCalls.asyncUnimplementedUnaryCall;

import java.nio.ByteBuffer;

import com.google.flatbuffers.grpc.FlatbuffersUtils;

/**
 */
@javax.annotation.Generated(
    value = "by gRPC proto compiler",
    comments = "Source: flatJson.fbs")
public final class FlatJsonGrpc {

  private FlatJsonGrpc() {}
  
  public static final String SERVICE_NAME = "com.msa.fbs.FlatJson";
  
  // Static method descriptors that strictly reflect the proto.
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  @java.lang.Deprecated // Use {@link #getCallRMsgMethod()} instead. 
  public static final io.grpc.MethodDescriptor<com.msa.fbs.Data,
      com.msa.fbs.RetMsg> METHOD_CALL_RMSG = getCallRMsgMethod();
  
  private static volatile io.grpc.MethodDescriptor<com.msa.fbs.Data,
      com.msa.fbs.RetMsg> getCallRMsgMethod;
  
  private static volatile FlatbuffersUtils.FBExtactor<com.msa.fbs.Data> extractorOfData;
  private static FlatbuffersUtils.FBExtactor<com.msa.fbs.Data> getExtractorOfData() {
      if (extractorOfData != null) return extractorOfData;
      synchronized (FlatJsonGrpc.class) {
          if (extractorOfData != null) return extractorOfData;
          extractorOfData = new FlatbuffersUtils.FBExtactor<com.msa.fbs.Data>() {
              public com.msa.fbs.Data extract (ByteBuffer buffer) {
                  return com.msa.fbs.Data.getRootAsData(buffer);
              }
          };
          return extractorOfData;
      }
  }
  
  private static volatile FlatbuffersUtils.FBExtactor<com.msa.fbs.RetMsg> extractorOfRetMsg;
  private static FlatbuffersUtils.FBExtactor<com.msa.fbs.RetMsg> getExtractorOfRetMsg() {
      if (extractorOfRetMsg != null) return extractorOfRetMsg;
      synchronized (FlatJsonGrpc.class) {
          if (extractorOfRetMsg != null) return extractorOfRetMsg;
          extractorOfRetMsg = new FlatbuffersUtils.FBExtactor<com.msa.fbs.RetMsg>() {
              public com.msa.fbs.RetMsg extract (ByteBuffer buffer) {
                  return com.msa.fbs.RetMsg.getRootAsRetMsg(buffer);
              }
          };
          return extractorOfRetMsg;
      }
  }
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  public static io.grpc.MethodDescriptor<com.msa.fbs.Data,
      com.msa.fbs.RetMsg> getCallRMsgMethod() {
    io.grpc.MethodDescriptor<com.msa.fbs.Data, com.msa.fbs.RetMsg> getCallRMsgMethod;
    if ((getCallRMsgMethod = FlatJsonGrpc.getCallRMsgMethod) == null) {
      synchronized (FlatJsonGrpc.class) {
        if ((getCallRMsgMethod = FlatJsonGrpc.getCallRMsgMethod) == null) {
          FlatJsonGrpc.getCallRMsgMethod = getCallRMsgMethod = 
              io.grpc.MethodDescriptor.<com.msa.fbs.Data, com.msa.fbs.RetMsg>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(
                  "com.msa.fbs.FlatJson", "callRMsg"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.Data.class, getExtractorOfData()))
              .setResponseMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.RetMsg.class, getExtractorOfRetMsg()))
                  .setSchemaDescriptor(null)
                  .build();
          }
        }
     }
     return getCallRMsgMethod;
  }
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  @java.lang.Deprecated // Use {@link #getMLearningMethod()} instead. 
  public static final io.grpc.MethodDescriptor<com.msa.fbs.Files,
      com.msa.fbs.Reply> METHOD_M_LEARNING = getMLearningMethod();
  
  private static volatile io.grpc.MethodDescriptor<com.msa.fbs.Files,
      com.msa.fbs.Reply> getMLearningMethod;
  
  private static volatile FlatbuffersUtils.FBExtactor<com.msa.fbs.Files> extractorOfFiles;
  private static FlatbuffersUtils.FBExtactor<com.msa.fbs.Files> getExtractorOfFiles() {
      if (extractorOfFiles != null) return extractorOfFiles;
      synchronized (FlatJsonGrpc.class) {
          if (extractorOfFiles != null) return extractorOfFiles;
          extractorOfFiles = new FlatbuffersUtils.FBExtactor<com.msa.fbs.Files>() {
              public com.msa.fbs.Files extract (ByteBuffer buffer) {
                  return com.msa.fbs.Files.getRootAsFiles(buffer);
              }
          };
          return extractorOfFiles;
      }
  }
  
  private static volatile FlatbuffersUtils.FBExtactor<com.msa.fbs.Reply> extractorOfReply;
  private static FlatbuffersUtils.FBExtactor<com.msa.fbs.Reply> getExtractorOfReply() {
      if (extractorOfReply != null) return extractorOfReply;
      synchronized (FlatJsonGrpc.class) {
          if (extractorOfReply != null) return extractorOfReply;
          extractorOfReply = new FlatbuffersUtils.FBExtactor<com.msa.fbs.Reply>() {
              public com.msa.fbs.Reply extract (ByteBuffer buffer) {
                  return com.msa.fbs.Reply.getRootAsReply(buffer);
              }
          };
          return extractorOfReply;
      }
  }
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  public static io.grpc.MethodDescriptor<com.msa.fbs.Files,
      com.msa.fbs.Reply> getMLearningMethod() {
    io.grpc.MethodDescriptor<com.msa.fbs.Files, com.msa.fbs.Reply> getMLearningMethod;
    if ((getMLearningMethod = FlatJsonGrpc.getMLearningMethod) == null) {
      synchronized (FlatJsonGrpc.class) {
        if ((getMLearningMethod = FlatJsonGrpc.getMLearningMethod) == null) {
          FlatJsonGrpc.getMLearningMethod = getMLearningMethod = 
              io.grpc.MethodDescriptor.<com.msa.fbs.Files, com.msa.fbs.Reply>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.CLIENT_STREAMING)
              .setFullMethodName(generateFullMethodName(
                  "com.msa.fbs.FlatJson", "m_learning"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.Files.class, getExtractorOfFiles()))
              .setResponseMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.Reply.class, getExtractorOfReply()))
                  .setSchemaDescriptor(null)
                  .build();
          }
        }
     }
     return getMLearningMethod;
  }
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  @java.lang.Deprecated // Use {@link #getUpload1Method()} instead. 
  public static final io.grpc.MethodDescriptor<com.msa.fbs.Chunk,
      com.msa.fbs.Reply> METHOD_UPLOAD1 = getUpload1Method();
  
  private static volatile io.grpc.MethodDescriptor<com.msa.fbs.Chunk,
      com.msa.fbs.Reply> getUpload1Method;
  
  private static volatile FlatbuffersUtils.FBExtactor<com.msa.fbs.Chunk> extractorOfChunk;
  private static FlatbuffersUtils.FBExtactor<com.msa.fbs.Chunk> getExtractorOfChunk() {
      if (extractorOfChunk != null) return extractorOfChunk;
      synchronized (FlatJsonGrpc.class) {
          if (extractorOfChunk != null) return extractorOfChunk;
          extractorOfChunk = new FlatbuffersUtils.FBExtactor<com.msa.fbs.Chunk>() {
              public com.msa.fbs.Chunk extract (ByteBuffer buffer) {
                  return com.msa.fbs.Chunk.getRootAsChunk(buffer);
              }
          };
          return extractorOfChunk;
      }
  }
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  public static io.grpc.MethodDescriptor<com.msa.fbs.Chunk,
      com.msa.fbs.Reply> getUpload1Method() {
    io.grpc.MethodDescriptor<com.msa.fbs.Chunk, com.msa.fbs.Reply> getUpload1Method;
    if ((getUpload1Method = FlatJsonGrpc.getUpload1Method) == null) {
      synchronized (FlatJsonGrpc.class) {
        if ((getUpload1Method = FlatJsonGrpc.getUpload1Method) == null) {
          FlatJsonGrpc.getUpload1Method = getUpload1Method = 
              io.grpc.MethodDescriptor.<com.msa.fbs.Chunk, com.msa.fbs.Reply>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.CLIENT_STREAMING)
              .setFullMethodName(generateFullMethodName(
                  "com.msa.fbs.FlatJson", "upload1"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.Chunk.class, getExtractorOfChunk()))
              .setResponseMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.Reply.class, getExtractorOfReply()))
                  .setSchemaDescriptor(null)
                  .build();
          }
        }
     }
     return getUpload1Method;
  }
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  @java.lang.Deprecated // Use {@link #getUpload2Method()} instead. 
  public static final io.grpc.MethodDescriptor<com.msa.fbs.Files,
      com.msa.fbs.Reply> METHOD_UPLOAD2 = getUpload2Method();
  
  private static volatile io.grpc.MethodDescriptor<com.msa.fbs.Files,
      com.msa.fbs.Reply> getUpload2Method;
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  public static io.grpc.MethodDescriptor<com.msa.fbs.Files,
      com.msa.fbs.Reply> getUpload2Method() {
    io.grpc.MethodDescriptor<com.msa.fbs.Files, com.msa.fbs.Reply> getUpload2Method;
    if ((getUpload2Method = FlatJsonGrpc.getUpload2Method) == null) {
      synchronized (FlatJsonGrpc.class) {
        if ((getUpload2Method = FlatJsonGrpc.getUpload2Method) == null) {
          FlatJsonGrpc.getUpload2Method = getUpload2Method = 
              io.grpc.MethodDescriptor.<com.msa.fbs.Files, com.msa.fbs.Reply>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.CLIENT_STREAMING)
              .setFullMethodName(generateFullMethodName(
                  "com.msa.fbs.FlatJson", "upload2"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.Files.class, getExtractorOfFiles()))
              .setResponseMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.Reply.class, getExtractorOfReply()))
                  .setSchemaDescriptor(null)
                  .build();
          }
        }
     }
     return getUpload2Method;
  }
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  @java.lang.Deprecated // Use {@link #getDownloadMethod()} instead. 
  public static final io.grpc.MethodDescriptor<com.msa.fbs.Data,
      com.msa.fbs.Chunk> METHOD_DOWNLOAD = getDownloadMethod();
  
  private static volatile io.grpc.MethodDescriptor<com.msa.fbs.Data,
      com.msa.fbs.Chunk> getDownloadMethod;
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  public static io.grpc.MethodDescriptor<com.msa.fbs.Data,
      com.msa.fbs.Chunk> getDownloadMethod() {
    io.grpc.MethodDescriptor<com.msa.fbs.Data, com.msa.fbs.Chunk> getDownloadMethod;
    if ((getDownloadMethod = FlatJsonGrpc.getDownloadMethod) == null) {
      synchronized (FlatJsonGrpc.class) {
        if ((getDownloadMethod = FlatJsonGrpc.getDownloadMethod) == null) {
          FlatJsonGrpc.getDownloadMethod = getDownloadMethod = 
              io.grpc.MethodDescriptor.<com.msa.fbs.Data, com.msa.fbs.Chunk>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.SERVER_STREAMING)
              .setFullMethodName(generateFullMethodName(
                  "com.msa.fbs.FlatJson", "download"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.Data.class, getExtractorOfData()))
              .setResponseMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.Chunk.class, getExtractorOfChunk()))
                  .setSchemaDescriptor(null)
                  .build();
          }
        }
     }
     return getDownloadMethod;
  }
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  @java.lang.Deprecated // Use {@link #getGetEnableJobMethod()} instead. 
  public static final io.grpc.MethodDescriptor<com.msa.fbs.Data,
      com.msa.fbs.RetMsg> METHOD_GET_ENABLE_JOB = getGetEnableJobMethod();
  
  private static volatile io.grpc.MethodDescriptor<com.msa.fbs.Data,
      com.msa.fbs.RetMsg> getGetEnableJobMethod;
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  public static io.grpc.MethodDescriptor<com.msa.fbs.Data,
      com.msa.fbs.RetMsg> getGetEnableJobMethod() {
    io.grpc.MethodDescriptor<com.msa.fbs.Data, com.msa.fbs.RetMsg> getGetEnableJobMethod;
    if ((getGetEnableJobMethod = FlatJsonGrpc.getGetEnableJobMethod) == null) {
      synchronized (FlatJsonGrpc.class) {
        if ((getGetEnableJobMethod = FlatJsonGrpc.getGetEnableJobMethod) == null) {
          FlatJsonGrpc.getGetEnableJobMethod = getGetEnableJobMethod = 
              io.grpc.MethodDescriptor.<com.msa.fbs.Data, com.msa.fbs.RetMsg>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(
                  "com.msa.fbs.FlatJson", "getEnableJob"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.Data.class, getExtractorOfData()))
              .setResponseMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.RetMsg.class, getExtractorOfRetMsg()))
                  .setSchemaDescriptor(null)
                  .build();
          }
        }
     }
     return getGetEnableJobMethod;
  }
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  @java.lang.Deprecated // Use {@link #getGetServiceXmlMethod()} instead. 
  public static final io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg,
      com.msa.fbs.RetMsg> METHOD_GET_SERVICE_XML = getGetServiceXmlMethod();
  
  private static volatile io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg,
      com.msa.fbs.RetMsg> getGetServiceXmlMethod;
  
  private static volatile FlatbuffersUtils.FBExtactor<com.msa.fbs.ReqMsg> extractorOfReqMsg;
  private static FlatbuffersUtils.FBExtactor<com.msa.fbs.ReqMsg> getExtractorOfReqMsg() {
      if (extractorOfReqMsg != null) return extractorOfReqMsg;
      synchronized (FlatJsonGrpc.class) {
          if (extractorOfReqMsg != null) return extractorOfReqMsg;
          extractorOfReqMsg = new FlatbuffersUtils.FBExtactor<com.msa.fbs.ReqMsg>() {
              public com.msa.fbs.ReqMsg extract (ByteBuffer buffer) {
                  return com.msa.fbs.ReqMsg.getRootAsReqMsg(buffer);
              }
          };
          return extractorOfReqMsg;
      }
  }
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  public static io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg,
      com.msa.fbs.RetMsg> getGetServiceXmlMethod() {
    io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg, com.msa.fbs.RetMsg> getGetServiceXmlMethod;
    if ((getGetServiceXmlMethod = FlatJsonGrpc.getGetServiceXmlMethod) == null) {
      synchronized (FlatJsonGrpc.class) {
        if ((getGetServiceXmlMethod = FlatJsonGrpc.getGetServiceXmlMethod) == null) {
          FlatJsonGrpc.getGetServiceXmlMethod = getGetServiceXmlMethod = 
              io.grpc.MethodDescriptor.<com.msa.fbs.ReqMsg, com.msa.fbs.RetMsg>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(
                  "com.msa.fbs.FlatJson", "getServiceXml"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.ReqMsg.class, getExtractorOfReqMsg()))
              .setResponseMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.RetMsg.class, getExtractorOfRetMsg()))
                  .setSchemaDescriptor(null)
                  .build();
          }
        }
     }
     return getGetServiceXmlMethod;
  }
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  @java.lang.Deprecated // Use {@link #getGetMstInfoMethod()} instead. 
  public static final io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg,
      com.msa.fbs.RetMsg> METHOD_GET_MST_INFO = getGetMstInfoMethod();
  
  private static volatile io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg,
      com.msa.fbs.RetMsg> getGetMstInfoMethod;
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  public static io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg,
      com.msa.fbs.RetMsg> getGetMstInfoMethod() {
    io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg, com.msa.fbs.RetMsg> getGetMstInfoMethod;
    if ((getGetMstInfoMethod = FlatJsonGrpc.getGetMstInfoMethod) == null) {
      synchronized (FlatJsonGrpc.class) {
        if ((getGetMstInfoMethod = FlatJsonGrpc.getGetMstInfoMethod) == null) {
          FlatJsonGrpc.getGetMstInfoMethod = getGetMstInfoMethod = 
              io.grpc.MethodDescriptor.<com.msa.fbs.ReqMsg, com.msa.fbs.RetMsg>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(
                  "com.msa.fbs.FlatJson", "getMstInfo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.ReqMsg.class, getExtractorOfReqMsg()))
              .setResponseMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.RetMsg.class, getExtractorOfRetMsg()))
                  .setSchemaDescriptor(null)
                  .build();
          }
        }
     }
     return getGetMstInfoMethod;
  }
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  @java.lang.Deprecated // Use {@link #getUpdTblAttach4DocNOMethod()} instead. 
  public static final io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg,
      com.msa.fbs.RetMsg> METHOD_UPD_TBL_ATTACH4DOC_NO = getUpdTblAttach4DocNOMethod();
  
  private static volatile io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg,
      com.msa.fbs.RetMsg> getUpdTblAttach4DocNOMethod;
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  public static io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg,
      com.msa.fbs.RetMsg> getUpdTblAttach4DocNOMethod() {
    io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg, com.msa.fbs.RetMsg> getUpdTblAttach4DocNOMethod;
    if ((getUpdTblAttach4DocNOMethod = FlatJsonGrpc.getUpdTblAttach4DocNOMethod) == null) {
      synchronized (FlatJsonGrpc.class) {
        if ((getUpdTblAttach4DocNOMethod = FlatJsonGrpc.getUpdTblAttach4DocNOMethod) == null) {
          FlatJsonGrpc.getUpdTblAttach4DocNOMethod = getUpdTblAttach4DocNOMethod = 
              io.grpc.MethodDescriptor.<com.msa.fbs.ReqMsg, com.msa.fbs.RetMsg>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(
                  "com.msa.fbs.FlatJson", "updTblAttach4DocNO"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.ReqMsg.class, getExtractorOfReqMsg()))
              .setResponseMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.RetMsg.class, getExtractorOfRetMsg()))
                  .setSchemaDescriptor(null)
                  .build();
          }
        }
     }
     return getUpdTblAttach4DocNOMethod;
  }
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  @java.lang.Deprecated // Use {@link #getInsNewCustVdInfoMethod()} instead. 
  public static final io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg,
      com.msa.fbs.RetMsg> METHOD_INS_NEW_CUST_VD_INFO = getInsNewCustVdInfoMethod();
  
  private static volatile io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg,
      com.msa.fbs.RetMsg> getInsNewCustVdInfoMethod;
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  public static io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg,
      com.msa.fbs.RetMsg> getInsNewCustVdInfoMethod() {
    io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg, com.msa.fbs.RetMsg> getInsNewCustVdInfoMethod;
    if ((getInsNewCustVdInfoMethod = FlatJsonGrpc.getInsNewCustVdInfoMethod) == null) {
      synchronized (FlatJsonGrpc.class) {
        if ((getInsNewCustVdInfoMethod = FlatJsonGrpc.getInsNewCustVdInfoMethod) == null) {
          FlatJsonGrpc.getInsNewCustVdInfoMethod = getInsNewCustVdInfoMethod = 
              io.grpc.MethodDescriptor.<com.msa.fbs.ReqMsg, com.msa.fbs.RetMsg>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(
                  "com.msa.fbs.FlatJson", "insNewCustVdInfo"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.ReqMsg.class, getExtractorOfReqMsg()))
              .setResponseMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.RetMsg.class, getExtractorOfRetMsg()))
                  .setSchemaDescriptor(null)
                  .build();
          }
        }
     }
     return getInsNewCustVdInfoMethod;
  }
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  @java.lang.Deprecated // Use {@link #getDelApvInfo4ApvUIDMethod()} instead. 
  public static final io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg,
      com.msa.fbs.RetMsg> METHOD_DEL_APV_INFO4APV_UID = getDelApvInfo4ApvUIDMethod();
  
  private static volatile io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg,
      com.msa.fbs.RetMsg> getDelApvInfo4ApvUIDMethod;
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  public static io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg,
      com.msa.fbs.RetMsg> getDelApvInfo4ApvUIDMethod() {
    io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg, com.msa.fbs.RetMsg> getDelApvInfo4ApvUIDMethod;
    if ((getDelApvInfo4ApvUIDMethod = FlatJsonGrpc.getDelApvInfo4ApvUIDMethod) == null) {
      synchronized (FlatJsonGrpc.class) {
        if ((getDelApvInfo4ApvUIDMethod = FlatJsonGrpc.getDelApvInfo4ApvUIDMethod) == null) {
          FlatJsonGrpc.getDelApvInfo4ApvUIDMethod = getDelApvInfo4ApvUIDMethod = 
              io.grpc.MethodDescriptor.<com.msa.fbs.ReqMsg, com.msa.fbs.RetMsg>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(
                  "com.msa.fbs.FlatJson", "delApvInfo4ApvUID"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.ReqMsg.class, getExtractorOfReqMsg()))
              .setResponseMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.RetMsg.class, getExtractorOfRetMsg()))
                  .setSchemaDescriptor(null)
                  .build();
          }
        }
     }
     return getDelApvInfo4ApvUIDMethod;
  }
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  @java.lang.Deprecated // Use {@link #getGetIFData4NoneIFMethod()} instead. 
  public static final io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg,
      com.msa.fbs.RetMsg> METHOD_GET_IFDATA4NONE_IF = getGetIFData4NoneIFMethod();
  
  private static volatile io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg,
      com.msa.fbs.RetMsg> getGetIFData4NoneIFMethod;
  
  @io.grpc.ExperimentalApi("https://github.com/grpc/grpc-java/issues/1901")
  public static io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg,
      com.msa.fbs.RetMsg> getGetIFData4NoneIFMethod() {
    io.grpc.MethodDescriptor<com.msa.fbs.ReqMsg, com.msa.fbs.RetMsg> getGetIFData4NoneIFMethod;
    if ((getGetIFData4NoneIFMethod = FlatJsonGrpc.getGetIFData4NoneIFMethod) == null) {
      synchronized (FlatJsonGrpc.class) {
        if ((getGetIFData4NoneIFMethod = FlatJsonGrpc.getGetIFData4NoneIFMethod) == null) {
          FlatJsonGrpc.getGetIFData4NoneIFMethod = getGetIFData4NoneIFMethod = 
              io.grpc.MethodDescriptor.<com.msa.fbs.ReqMsg, com.msa.fbs.RetMsg>newBuilder()
              .setType(io.grpc.MethodDescriptor.MethodType.UNARY)
              .setFullMethodName(generateFullMethodName(
                  "com.msa.fbs.FlatJson", "getIFData4NoneIF"))
              .setSampledToLocalTracing(true)
              .setRequestMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.ReqMsg.class, getExtractorOfReqMsg()))
              .setResponseMarshaller(FlatbuffersUtils.marshaller(
                  com.msa.fbs.RetMsg.class, getExtractorOfRetMsg()))
                  .setSchemaDescriptor(null)
                  .build();
          }
        }
     }
     return getGetIFData4NoneIFMethod;
  }
  
  /**
   * Creates a new async stub that supports all call types for the service
   */
  public static FlatJsonStub newStub(io.grpc.Channel channel) {
    return new FlatJsonStub(channel);
  }
  
  /**
   * Creates a new blocking-style stub that supports unary and streaming output calls on the service
   */
  public static FlatJsonBlockingStub newBlockingStub(
      io.grpc.Channel channel) {
    return new FlatJsonBlockingStub(channel);
  }
  
  /**
   * Creates a new ListenableFuture-style stub that supports unary calls on the service
   */
  public static FlatJsonFutureStub newFutureStub(
      io.grpc.Channel channel) {
    return new FlatJsonFutureStub(channel);
  }
  
  /**
   */
  public static abstract class FlatJsonImplBase implements io.grpc.BindableService {
    
    /**
     */
    public     void callRMsg(com.msa.fbs.Data request,
        io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg> responseObserver)     {
      asyncUnimplementedUnaryCall(getCallRMsgMethod(), responseObserver);
    }
    
    /**
     */
    public     io.grpc.stub.StreamObserver<com.msa.fbs.Files> mLearning(
        io.grpc.stub.StreamObserver<com.msa.fbs.Reply> responseObserver)     {
      return asyncUnimplementedStreamingCall(getMLearningMethod(), responseObserver);
    }
    
    /**
     */
    public     io.grpc.stub.StreamObserver<com.msa.fbs.Chunk> upload1(
        io.grpc.stub.StreamObserver<com.msa.fbs.Reply> responseObserver)     {
      return asyncUnimplementedStreamingCall(getUpload1Method(), responseObserver);
    }
    
    /**
     */
    public     io.grpc.stub.StreamObserver<com.msa.fbs.Files> upload2(
        io.grpc.stub.StreamObserver<com.msa.fbs.Reply> responseObserver)     {
      return asyncUnimplementedStreamingCall(getUpload2Method(), responseObserver);
    }
    
    /**
     */
    public     void download(com.msa.fbs.Data request,
        io.grpc.stub.StreamObserver<com.msa.fbs.Chunk> responseObserver)     {
      asyncUnimplementedUnaryCall(getDownloadMethod(), responseObserver);
    }
    
    /**
     */
    public     void getEnableJob(com.msa.fbs.Data request,
        io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg> responseObserver)     {
      asyncUnimplementedUnaryCall(getGetEnableJobMethod(), responseObserver);
    }
    
    /**
     */
    public     void getServiceXml(com.msa.fbs.ReqMsg request,
        io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg> responseObserver)     {
      asyncUnimplementedUnaryCall(getGetServiceXmlMethod(), responseObserver);
    }
    
    /**
     */
    public     void getMstInfo(com.msa.fbs.ReqMsg request,
        io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg> responseObserver)     {
      asyncUnimplementedUnaryCall(getGetMstInfoMethod(), responseObserver);
    }
    
    /**
     */
    public     void updTblAttach4DocNO(com.msa.fbs.ReqMsg request,
        io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg> responseObserver)     {
      asyncUnimplementedUnaryCall(getUpdTblAttach4DocNOMethod(), responseObserver);
    }
    
    /**
     */
    public     void insNewCustVdInfo(com.msa.fbs.ReqMsg request,
        io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg> responseObserver)     {
      asyncUnimplementedUnaryCall(getInsNewCustVdInfoMethod(), responseObserver);
    }
    
    /**
     */
    public     void delApvInfo4ApvUID(com.msa.fbs.ReqMsg request,
        io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg> responseObserver)     {
      asyncUnimplementedUnaryCall(getDelApvInfo4ApvUIDMethod(), responseObserver);
    }
    
    /**
     */
    public     void getIFData4NoneIF(com.msa.fbs.ReqMsg request,
        io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg> responseObserver)     {
      asyncUnimplementedUnaryCall(getGetIFData4NoneIFMethod(), responseObserver);
    }
    
    @java.lang.Override public final io.grpc.ServerServiceDefinition bindService() {
      return io.grpc.ServerServiceDefinition.builder(getServiceDescriptor())
          .addMethod(
            getCallRMsgMethod(),
            asyncUnaryCall(
              new MethodHandlers<
                com.msa.fbs.Data,
                com.msa.fbs.RetMsg>(
                  this, METHODID_CALL_RMSG)))
          .addMethod(
            getMLearningMethod(),
            asyncClientStreamingCall(
              new MethodHandlers<
                com.msa.fbs.Files,
                com.msa.fbs.Reply>(
                  this, METHODID_M_LEARNING)))
          .addMethod(
            getUpload1Method(),
            asyncClientStreamingCall(
              new MethodHandlers<
                com.msa.fbs.Chunk,
                com.msa.fbs.Reply>(
                  this, METHODID_UPLOAD1)))
          .addMethod(
            getUpload2Method(),
            asyncClientStreamingCall(
              new MethodHandlers<
                com.msa.fbs.Files,
                com.msa.fbs.Reply>(
                  this, METHODID_UPLOAD2)))
          .addMethod(
            getDownloadMethod(),
            asyncServerStreamingCall(
              new MethodHandlers<
                com.msa.fbs.Data,
                com.msa.fbs.Chunk>(
                  this, METHODID_DOWNLOAD)))
          .addMethod(
            getGetEnableJobMethod(),
            asyncUnaryCall(
              new MethodHandlers<
                com.msa.fbs.Data,
                com.msa.fbs.RetMsg>(
                  this, METHODID_GET_ENABLE_JOB)))
          .addMethod(
            getGetServiceXmlMethod(),
            asyncUnaryCall(
              new MethodHandlers<
                com.msa.fbs.ReqMsg,
                com.msa.fbs.RetMsg>(
                  this, METHODID_GET_SERVICE_XML)))
          .addMethod(
            getGetMstInfoMethod(),
            asyncUnaryCall(
              new MethodHandlers<
                com.msa.fbs.ReqMsg,
                com.msa.fbs.RetMsg>(
                  this, METHODID_GET_MST_INFO)))
          .addMethod(
            getUpdTblAttach4DocNOMethod(),
            asyncUnaryCall(
              new MethodHandlers<
                com.msa.fbs.ReqMsg,
                com.msa.fbs.RetMsg>(
                  this, METHODID_UPD_TBL_ATTACH4DOC_NO)))
          .addMethod(
            getInsNewCustVdInfoMethod(),
            asyncUnaryCall(
              new MethodHandlers<
                com.msa.fbs.ReqMsg,
                com.msa.fbs.RetMsg>(
                  this, METHODID_INS_NEW_CUST_VD_INFO)))
          .addMethod(
            getDelApvInfo4ApvUIDMethod(),
            asyncUnaryCall(
              new MethodHandlers<
                com.msa.fbs.ReqMsg,
                com.msa.fbs.RetMsg>(
                  this, METHODID_DEL_APV_INFO4APV_UID)))
          .addMethod(
            getGetIFData4NoneIFMethod(),
            asyncUnaryCall(
              new MethodHandlers<
                com.msa.fbs.ReqMsg,
                com.msa.fbs.RetMsg>(
                  this, METHODID_GET_IFDATA4NONE_IF)))
          .build();
    }
  }
  
  /**
   */
  public static final class FlatJsonStub extends io.grpc.stub.AbstractStub<FlatJsonStub> {
    private FlatJsonStub(io.grpc.Channel channel) {
      super(channel);
    }
    
    private FlatJsonStub(io.grpc.Channel channel,
        io.grpc.CallOptions callOptions) {
      super(channel, callOptions);
    }
    
    @java.lang.Override
    protected FlatJsonStub build(io.grpc.Channel channel,
        io.grpc.CallOptions callOptions) {
      return new FlatJsonStub(channel, callOptions);
    }
    
    /**
     */
    public     void callRMsg(com.msa.fbs.Data request,
        io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg> responseObserver)     {
      asyncUnaryCall(
          getChannel().newCall(getCallRMsgMethod(), getCallOptions()), request, responseObserver);
    }
    
    /**
     */
    public     io.grpc.stub.StreamObserver<com.msa.fbs.Files> mLearning(
        io.grpc.stub.StreamObserver<com.msa.fbs.Reply> responseObserver)     {
      return asyncClientStreamingCall(
          getChannel().newCall(getMLearningMethod(), getCallOptions()), responseObserver);
    }
    
    /**
     */
    public     io.grpc.stub.StreamObserver<com.msa.fbs.Chunk> upload1(
        io.grpc.stub.StreamObserver<com.msa.fbs.Reply> responseObserver)     {
      return asyncClientStreamingCall(
          getChannel().newCall(getUpload1Method(), getCallOptions()), responseObserver);
    }
    
    /**
     */
    public     io.grpc.stub.StreamObserver<com.msa.fbs.Files> upload2(
        io.grpc.stub.StreamObserver<com.msa.fbs.Reply> responseObserver)     {
      return asyncClientStreamingCall(
          getChannel().newCall(getUpload2Method(), getCallOptions()), responseObserver);
    }
    
    /**
     */
    public     void download(com.msa.fbs.Data request,
        io.grpc.stub.StreamObserver<com.msa.fbs.Chunk> responseObserver)     {
      asyncServerStreamingCall(
          getChannel().newCall(getDownloadMethod(), getCallOptions()), request, responseObserver);
    }
    
    /**
     */
    public     void getEnableJob(com.msa.fbs.Data request,
        io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg> responseObserver)     {
      asyncUnaryCall(
          getChannel().newCall(getGetEnableJobMethod(), getCallOptions()), request, responseObserver);
    }
    
    /**
     */
    public     void getServiceXml(com.msa.fbs.ReqMsg request,
        io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg> responseObserver)     {
      asyncUnaryCall(
          getChannel().newCall(getGetServiceXmlMethod(), getCallOptions()), request, responseObserver);
    }
    
    /**
     */
    public     void getMstInfo(com.msa.fbs.ReqMsg request,
        io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg> responseObserver)     {
      asyncUnaryCall(
          getChannel().newCall(getGetMstInfoMethod(), getCallOptions()), request, responseObserver);
    }
    
    /**
     */
    public     void updTblAttach4DocNO(com.msa.fbs.ReqMsg request,
        io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg> responseObserver)     {
      asyncUnaryCall(
          getChannel().newCall(getUpdTblAttach4DocNOMethod(), getCallOptions()), request, responseObserver);
    }
    
    /**
     */
    public     void insNewCustVdInfo(com.msa.fbs.ReqMsg request,
        io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg> responseObserver)     {
      asyncUnaryCall(
          getChannel().newCall(getInsNewCustVdInfoMethod(), getCallOptions()), request, responseObserver);
    }
    
    /**
     */
    public     void delApvInfo4ApvUID(com.msa.fbs.ReqMsg request,
        io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg> responseObserver)     {
      asyncUnaryCall(
          getChannel().newCall(getDelApvInfo4ApvUIDMethod(), getCallOptions()), request, responseObserver);
    }
    
    /**
     */
    public     void getIFData4NoneIF(com.msa.fbs.ReqMsg request,
        io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg> responseObserver)     {
      asyncUnaryCall(
          getChannel().newCall(getGetIFData4NoneIFMethod(), getCallOptions()), request, responseObserver);
    }
  }
  
  /**
   */
  public static final class FlatJsonBlockingStub extends io.grpc.stub.AbstractStub<FlatJsonBlockingStub> {
    private FlatJsonBlockingStub(io.grpc.Channel channel) {
      super(channel);
    }
    
    private FlatJsonBlockingStub(io.grpc.Channel channel,
        io.grpc.CallOptions callOptions) {
      super(channel, callOptions);
    }
    
    @java.lang.Override
    protected FlatJsonBlockingStub build(io.grpc.Channel channel,
        io.grpc.CallOptions callOptions) {
      return new FlatJsonBlockingStub(channel, callOptions);
    }
    
    /**
     */
    public     com.msa.fbs.RetMsg callRMsg(com.msa.fbs.Data request)     {
      return blockingUnaryCall(
          getChannel(), getCallRMsgMethod(), getCallOptions(), request);
    }
    
    /**
     */
    public     java.util.Iterator<com.msa.fbs.Chunk> download(
        com.msa.fbs.Data request)     {
      return blockingServerStreamingCall(
          getChannel(), getDownloadMethod(), getCallOptions(), request);
    }
    
    /**
     */
    public     com.msa.fbs.RetMsg getEnableJob(com.msa.fbs.Data request)     {
      return blockingUnaryCall(
          getChannel(), getGetEnableJobMethod(), getCallOptions(), request);
    }
    
    /**
     */
    public     com.msa.fbs.RetMsg getServiceXml(com.msa.fbs.ReqMsg request)     {
      return blockingUnaryCall(
          getChannel(), getGetServiceXmlMethod(), getCallOptions(), request);
    }
    
    /**
     */
    public     com.msa.fbs.RetMsg getMstInfo(com.msa.fbs.ReqMsg request)     {
      return blockingUnaryCall(
          getChannel(), getGetMstInfoMethod(), getCallOptions(), request);
    }
    
    /**
     */
    public     com.msa.fbs.RetMsg updTblAttach4DocNO(com.msa.fbs.ReqMsg request)     {
      return blockingUnaryCall(
          getChannel(), getUpdTblAttach4DocNOMethod(), getCallOptions(), request);
    }
    
    /**
     */
    public     com.msa.fbs.RetMsg insNewCustVdInfo(com.msa.fbs.ReqMsg request)     {
      return blockingUnaryCall(
          getChannel(), getInsNewCustVdInfoMethod(), getCallOptions(), request);
    }
    
    /**
     */
    public     com.msa.fbs.RetMsg delApvInfo4ApvUID(com.msa.fbs.ReqMsg request)     {
      return blockingUnaryCall(
          getChannel(), getDelApvInfo4ApvUIDMethod(), getCallOptions(), request);
    }
    
    /**
     */
    public     com.msa.fbs.RetMsg getIFData4NoneIF(com.msa.fbs.ReqMsg request)     {
      return blockingUnaryCall(
          getChannel(), getGetIFData4NoneIFMethod(), getCallOptions(), request);
    }
  }
  
  /**
   */
  public static final class FlatJsonFutureStub extends io.grpc.stub.AbstractStub<FlatJsonFutureStub> {
    private FlatJsonFutureStub(io.grpc.Channel channel) {
      super(channel);
    }
    
    private FlatJsonFutureStub(io.grpc.Channel channel,
        io.grpc.CallOptions callOptions) {
      super(channel, callOptions);
    }
    
    @java.lang.Override
    protected FlatJsonFutureStub build(io.grpc.Channel channel,
        io.grpc.CallOptions callOptions) {
      return new FlatJsonFutureStub(channel, callOptions);
    }
    
    /**
     */
    public     com.google.common.util.concurrent.ListenableFuture<com.msa.fbs.RetMsg> callRMsg(
        com.msa.fbs.Data request)     {
      return futureUnaryCall(
          getChannel().newCall(getCallRMsgMethod(), getCallOptions()), request);
    }
    
    /**
     */
    public     com.google.common.util.concurrent.ListenableFuture<com.msa.fbs.RetMsg> getEnableJob(
        com.msa.fbs.Data request)     {
      return futureUnaryCall(
          getChannel().newCall(getGetEnableJobMethod(), getCallOptions()), request);
    }
    
    /**
     */
    public     com.google.common.util.concurrent.ListenableFuture<com.msa.fbs.RetMsg> getServiceXml(
        com.msa.fbs.ReqMsg request)     {
      return futureUnaryCall(
          getChannel().newCall(getGetServiceXmlMethod(), getCallOptions()), request);
    }
    
    /**
     */
    public     com.google.common.util.concurrent.ListenableFuture<com.msa.fbs.RetMsg> getMstInfo(
        com.msa.fbs.ReqMsg request)     {
      return futureUnaryCall(
          getChannel().newCall(getGetMstInfoMethod(), getCallOptions()), request);
    }
    
    /**
     */
    public     com.google.common.util.concurrent.ListenableFuture<com.msa.fbs.RetMsg> updTblAttach4DocNO(
        com.msa.fbs.ReqMsg request)     {
      return futureUnaryCall(
          getChannel().newCall(getUpdTblAttach4DocNOMethod(), getCallOptions()), request);
    }
    
    /**
     */
    public     com.google.common.util.concurrent.ListenableFuture<com.msa.fbs.RetMsg> insNewCustVdInfo(
        com.msa.fbs.ReqMsg request)     {
      return futureUnaryCall(
          getChannel().newCall(getInsNewCustVdInfoMethod(), getCallOptions()), request);
    }
    
    /**
     */
    public     com.google.common.util.concurrent.ListenableFuture<com.msa.fbs.RetMsg> delApvInfo4ApvUID(
        com.msa.fbs.ReqMsg request)     {
      return futureUnaryCall(
          getChannel().newCall(getDelApvInfo4ApvUIDMethod(), getCallOptions()), request);
    }
    
    /**
     */
    public     com.google.common.util.concurrent.ListenableFuture<com.msa.fbs.RetMsg> getIFData4NoneIF(
        com.msa.fbs.ReqMsg request)     {
      return futureUnaryCall(
          getChannel().newCall(getGetIFData4NoneIFMethod(), getCallOptions()), request);
    }
  }
  
  private static final int METHODID_CALL_RMSG = 0;
  private static final int METHODID_DOWNLOAD = 1;
  private static final int METHODID_GET_ENABLE_JOB = 2;
  private static final int METHODID_GET_SERVICE_XML = 3;
  private static final int METHODID_GET_MST_INFO = 4;
  private static final int METHODID_UPD_TBL_ATTACH4DOC_NO = 5;
  private static final int METHODID_INS_NEW_CUST_VD_INFO = 6;
  private static final int METHODID_DEL_APV_INFO4APV_UID = 7;
  private static final int METHODID_GET_IFDATA4NONE_IF = 8;
  private static final int METHODID_M_LEARNING = 9;
  private static final int METHODID_UPLOAD1 = 10;
  private static final int METHODID_UPLOAD2 = 11;
  
  private static final class MethodHandlers<Req, Resp> implements
      io.grpc.stub.ServerCalls.UnaryMethod<Req, Resp>,
      io.grpc.stub.ServerCalls.ServerStreamingMethod<Req, Resp>,
      io.grpc.stub.ServerCalls.ClientStreamingMethod<Req, Resp>,
      io.grpc.stub.ServerCalls.BidiStreamingMethod<Req, Resp> {
    private final FlatJsonImplBase serviceImpl;
    private final int methodId;
  
    MethodHandlers(FlatJsonImplBase serviceImpl, int methodId) {
      this.serviceImpl = serviceImpl;
      this.methodId = methodId;
    }
  
    @java.lang.Override
    @java.lang.SuppressWarnings("unchecked")
    public void invoke(Req request, io.grpc.stub.StreamObserver<Resp> responseObserver) {
      switch (methodId) {
        case METHODID_CALL_RMSG:
          serviceImpl.callRMsg((com.msa.fbs.Data) request,
              (io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg>) responseObserver);
          break;
        case METHODID_DOWNLOAD:
          serviceImpl.download((com.msa.fbs.Data) request,
              (io.grpc.stub.StreamObserver<com.msa.fbs.Chunk>) responseObserver);
          break;
        case METHODID_GET_ENABLE_JOB:
          serviceImpl.getEnableJob((com.msa.fbs.Data) request,
              (io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg>) responseObserver);
          break;
        case METHODID_GET_SERVICE_XML:
          serviceImpl.getServiceXml((com.msa.fbs.ReqMsg) request,
              (io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg>) responseObserver);
          break;
        case METHODID_GET_MST_INFO:
          serviceImpl.getMstInfo((com.msa.fbs.ReqMsg) request,
              (io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg>) responseObserver);
          break;
        case METHODID_UPD_TBL_ATTACH4DOC_NO:
          serviceImpl.updTblAttach4DocNO((com.msa.fbs.ReqMsg) request,
              (io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg>) responseObserver);
          break;
        case METHODID_INS_NEW_CUST_VD_INFO:
          serviceImpl.insNewCustVdInfo((com.msa.fbs.ReqMsg) request,
              (io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg>) responseObserver);
          break;
        case METHODID_DEL_APV_INFO4APV_UID:
          serviceImpl.delApvInfo4ApvUID((com.msa.fbs.ReqMsg) request,
              (io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg>) responseObserver);
          break;
        case METHODID_GET_IFDATA4NONE_IF:
          serviceImpl.getIFData4NoneIF((com.msa.fbs.ReqMsg) request,
              (io.grpc.stub.StreamObserver<com.msa.fbs.RetMsg>) responseObserver);
          break;
        default:
          throw new AssertionError();
      }
    }
    
    @java.lang.Override
    @java.lang.SuppressWarnings("unchecked")
    public io.grpc.stub.StreamObserver<Req> invoke(
        io.grpc.stub.StreamObserver<Resp> responseObserver) {
      switch (methodId) {
        case METHODID_M_LEARNING:
          return (io.grpc.stub.StreamObserver<Req>) serviceImpl.mLearning(
              (io.grpc.stub.StreamObserver<com.msa.fbs.Reply>) responseObserver);
        case METHODID_UPLOAD1:
          return (io.grpc.stub.StreamObserver<Req>) serviceImpl.upload1(
              (io.grpc.stub.StreamObserver<com.msa.fbs.Reply>) responseObserver);
        case METHODID_UPLOAD2:
          return (io.grpc.stub.StreamObserver<Req>) serviceImpl.upload2(
              (io.grpc.stub.StreamObserver<com.msa.fbs.Reply>) responseObserver);
        default:
          throw new AssertionError();
      }
    }
  }
  
  private static volatile io.grpc.ServiceDescriptor serviceDescriptor;
  
  public static io.grpc.ServiceDescriptor getServiceDescriptor() {
    io.grpc.ServiceDescriptor result = serviceDescriptor;
    if (result == null) {
      synchronized (FlatJsonGrpc.class) {
        result = serviceDescriptor;
        if (result == null) {
          serviceDescriptor = result = io.grpc.ServiceDescriptor.newBuilder(SERVICE_NAME)              
              .setSchemaDescriptor(null)              
              .addMethod(getCallRMsgMethod())              
              .addMethod(getMLearningMethod())              
              .addMethod(getUpload1Method())              
              .addMethod(getUpload2Method())              
              .addMethod(getDownloadMethod())              
              .addMethod(getGetEnableJobMethod())              
              .addMethod(getGetServiceXmlMethod())              
              .addMethod(getGetMstInfoMethod())              
              .addMethod(getUpdTblAttach4DocNOMethod())              
              .addMethod(getInsNewCustVdInfoMethod())              
              .addMethod(getDelApvInfo4ApvUIDMethod())              
              .addMethod(getGetIFData4NoneIFMethod())              
              .build();
        }
      }
    }
    return result;
  }
}
