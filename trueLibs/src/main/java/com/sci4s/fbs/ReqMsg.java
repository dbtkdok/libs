// automatically generated by the FlatBuffers compiler, do not modify

package com.sci4s.fbs;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ReqMsg extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_11_1(); }
  public static ReqMsg getRootAsReqMsg(ByteBuffer _bb) { return getRootAsReqMsg(_bb, new ReqMsg()); }
  public static ReqMsg getRootAsReqMsg(ByteBuffer _bb, ReqMsg obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public ReqMsg __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String agentID() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer agentIDAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer agentIDInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String msg() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer msgAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer msgInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }

  public static int createReqMsg(FlatBufferBuilder builder,
      int agentIDOffset,
      int msgOffset) {
    builder.startTable(2);
    ReqMsg.addMsg(builder, msgOffset);
    ReqMsg.addAgentID(builder, agentIDOffset);
    return ReqMsg.endReqMsg(builder);
  }

  public static void startReqMsg(FlatBufferBuilder builder) { builder.startTable(2); }
  public static void addAgentID(FlatBufferBuilder builder, int agentIDOffset) { builder.addOffset(0, agentIDOffset, 0); }
  public static void addMsg(FlatBufferBuilder builder, int msgOffset) { builder.addOffset(1, msgOffset, 0); }
  public static int endReqMsg(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public ReqMsg get(int j) { return get(new ReqMsg(), j); }
    public ReqMsg get(ReqMsg obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

