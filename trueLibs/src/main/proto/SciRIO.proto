//Define the used version of proto:
syntax = 'proto3';
package com.msa.grpc;

import "google/protobuf/any.proto";

option java_package = "com.msa.grpc";
option java_outer_classname = "SciRIO";

message Struct {
  map<string, Value> fields = 1;
}

message Value {
  oneof kind {
    double double_value  = 1;
    float  float_value   = 2;
    int32  int32_value   = 3;
    int64  int64_value   = 4;
    uint32 uint32_value  = 5;
    uint64 uint64_value  = 6;
    bool   bool_value    = 7;
    string string_value  = 8;
    bytes  bytes_value   = 9;
    Struct struct_value  = 10;
    ListValue list_value = 11;
    NullValue null_value = 12;
    google.protobuf.Any any_value = 13;
  }
}

enum NullValue {
  NULL_VALUE = 0;
}

message ListValue {
  repeated Value values = 1;
}

message Reply {
  int32 length = 1;
  string name = 2;
}

message Files {
    string fileName  = 1;
    bytes  fileBytes = 2;
}

message Chunk {
    bytes buffer = 1;
}

message Data {
	string pID      = 1 ;
	string agentID  = 2 ;
	string csKey    = 3 ;
    string userIP   = 4 ;
    string serverIP = 5 ;
    string userUID  = 6 ;
    string borgUID  = 7 ;
    string clang    = 8 ;
    
	string data = 9 ;
	map<string, string> params = 10;
	
	string errCode = 11;
	string errMsg  = 12;
}

message RetMsg {
	string errCode = 1;
	string errMsg  = 2;
	string results = 3;
}

message ReqMsg {
	string agentID = 1;
	string msg = 2;
}

//Define the service :
service MsaApi{
    rpc callRPC(Data) returns (Data){}
    rpc callRMsg(Data) returns (RetMsg){}
    rpc m_learning(stream Files) returns (Reply) {}
    rpc upload1(stream Chunk) returns (Reply) {}
    rpc upload2(stream Files) returns (Reply) {}
    rpc download(Data) returns (stream Chunk) {}
    rpc getEnableJob(Data) returns (RetMsg) {}
    rpc getServiceXml(ReqMsg) returns (RetMsg) {}
    rpc getMstInfo(ReqMsg) returns (RetMsg) {}
    rpc updTblAttach4DocNO(ReqMsg) returns (RetMsg) {}
    rpc insNewCustVdInfo(ReqMsg) returns (RetMsg) {}
    rpc delApvInfo4ApvUID(ReqMsg) returns (RetMsg) {}
    rpc getIFData4NoneIF(ReqMsg) returns (RetMsg) {}
}